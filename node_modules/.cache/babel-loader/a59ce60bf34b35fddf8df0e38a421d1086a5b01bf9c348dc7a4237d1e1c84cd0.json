{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechLiance\\\\tehc1\\\\finished\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React from 'react';\nimport './Chart.css';\nimport ChartBar from './ChartBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = props => {\n  // Check if props.dataPoints is defined and an array\n  if (!props.dataPoints || !Array.isArray(props.dataPoints)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this); // You can display an error message or handle this case accordingly\n  }\n\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","ChartBar","jsxDEV","_jsxDEV","Chart","props","dataPoints","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","dataPointValues","map","dataPoint","value","totalMaximum","Math","max","className","maxValue","label","_c","$RefreshReg$"],"sources":["D:/TechLiance/tehc1/finished/src/components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n    // Check if props.dataPoints is defined and an array\r\n    if (!props.dataPoints || !Array.isArray(props.dataPoints)) {\r\n        return <p>No data available.</p>; // You can display an error message or handle this case accordingly\r\n    }\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map(dataPoint => (\r\n                <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACrB;EACA,IAAI,CAACA,KAAK,CAACC,UAAU,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAACC,UAAU,CAAC,EAAE;IACvD,oBAAOH,OAAA;MAAAM,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACtC;;EAEA,MAAMC,eAAe,GAAGT,KAAK,CAACC,UAAU,CAACS,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,CAAC;EAC1E,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,eAAe,CAAC;EAEjD,oBACIX,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAZ,QAAA,EACjBJ,KAAK,CAACC,UAAU,CAACS,GAAG,CAACC,SAAS,iBAC3Bb,OAAA,CAACF,QAAQ;MAAuBgB,KAAK,EAAED,SAAS,CAACC,KAAM;MAACK,QAAQ,EAAEJ,YAAa;MAACK,KAAK,EAAEP,SAAS,CAACO;IAAM,GAAxFP,SAAS,CAACO,KAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0E,CAC3G;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAW,EAAA,GAhBKpB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}